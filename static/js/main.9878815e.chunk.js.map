{"version":3,"sources":["components/Header/style.module.scss","components/SearchForm/style.module.scss","components/MoviesPage/MovieDetailsPage/style.module.scss","components/MoviesPage/MovieDetailsPage/Cast/style.module.scss","components/MoviesPage/MovieDetailsPage/MovieCard/style.module.scss","components/HomePage/style.module.scss","components/MoviesPage/style.module.scss","components/MoviesList/index.jsx","components/HomePage/index.jsx","components/MoviesPage/MovieDetailsPage/Cast/index.jsx","components/MoviesPage/MovieDetailsPage/Reviews/index.jsx","components/MoviesApi/index.jsx","components/MoviesPage/MovieDetailsPage/MovieCard/index.jsx","components/MoviesPage/MovieDetailsPage/index.jsx","components/SearchForm/index.jsx","components/MoviesPage/index.jsx","components/Header/index.jsx","components/App/index.jsx","index.js"],"names":["module","exports","MoviesList","moviesList","url","location","map","title","id","key","to","pathname","state","defaultProps","Homepage","this","props","fetchMovies","className","css","homePage","Component","Cast","credits","character","name","profile_path","src","alt","img","Reviews","reviews","author","content","axios","defaults","baseURL","get","then","res","data","catch","err","console","log","MovieCard","movieInfo","backdrop_path","vote_average","overview","genres","movieCard","movieCardInfo","el","join","MovieDetailsPage","spinner2","location_state","fetchMovieInfo","infoType","setState","MoviesApi","results","cast","finally","window","scrollTo","top","behavior","fetchCast","fetchReviews","goBack","history","push","match","params","movie_id","movieDetailsPage","backButton","onClick","path","render","style","zIndex","display","SearchForm","handleSubmit","onInputChange","searchForm","onSubmit","searchFormInput","type","placeholder","onChange","button","MoviesPage","checkSearchString","prevProps","search","parsedSearch","qs","parse","slice","query","fetchMoviesByQuery","moviesPage","Header","currentPage","header","exact","link","activeClassName","linkActive","App","spinner","popularMoviesList","searchMoviesList","list","fetchPopularMovies","evt","preventDefault","stringify","value","target","changePage","HomePage","ReactDOM","basename","component","document","getElementById"],"mappings":"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","file":"static/js/main.9878815e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__1pUZY\",\"link\":\"style_link__350XL\",\"linkActive\":\"style_linkActive__Xi1hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"style_searchForm__VeWpv\",\"button\":\"style_button__1gfd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieDetailsPage\":\"style_movieDetailsPage__2bfdN\",\"backButton\":\"style_backButton__23JQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character\":\"style_character__30OJh\",\"img\":\"style_img__zBY5K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"style_movieCard__3cI0J\",\"movieCardInfo\":\"style_movieCardInfo__2F9A8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"style_spinner__2q7gY\",\"homePage\":\"style_homePage__qCRAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesPage\":\"style_moviesPage__evZ_r\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MoviesList = ({ moviesList, url, location }) =>  (\r\n  <ul>\r\n    {moviesList.map(({ title, id }) =>\r\n      <li key={id}>\r\n        <Link to={{ pathname: `${url}/${id}`, state: { ...location } }} id={id}>\r\n          {title}\r\n        </Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n)\r\n\r\nMoviesList.propTypes = {\r\n  moviesList: PropTypes.array,\r\n  url: PropTypes.string,\r\n  location: PropTypes.object,\r\n}\r\n\r\nMoviesList.defaultProps = {\r\n  moviesList: [],\r\n  url: '/',\r\n  location: {pathname: '/'},\r\n}\r\n\r\n\r\nexport default MoviesList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './style.module.scss'\nimport MoviesList from '../MoviesList';\n\n\nclass Homepage extends Component {\n  componentDidMount() {\n    this.props.fetchMovies();\n  }\n  render() {\n    const { moviesList, location } = this.props;\n    return (\n      <section className={css.homePage}>\n        <MoviesList moviesList={moviesList} location={location} url={'/movies'} />\n      </section>\n    )\n  }\n};\n\nHomepage.propTypes = {\n  moviesList: PropTypes.array,\n}\n\n\nHomepage.defaultProps = {\n  moviesList: [],\n}\n\nexport default Homepage;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './style.module.scss';\r\n\r\nconst Cast = ({ credits }) => (\r\n  <div>\r\n    <ul>\r\n      {credits.map(({ character, name, profile_path, id }) => {\r\n        \r\n        const src = profile_path ? `https://image.tmdb.org/t/p/w200${profile_path}`\r\n          : \"https://prikolnye-kartinki.ru/img/picture/Sep/21/697113e1bbc73e0d6eb2dfa4af89c1e2/2.jpg\"\r\n\r\n        return (\r\n          <li key={id} className={css.character}>\r\n            <img src={src} alt=\"\" className={css.img} />\r\n            <p>{name}</p>\r\n            <p>Character: {character}</p>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nCast.propTypes = {\r\n  credits: PropTypes.array,\r\n}\r\n\r\nCast.defaultProps = {\r\n  credits: [],\r\n}\r\n\r\nexport default Cast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Reviews = ({ reviews }) => (\r\n  <div>\r\n      {!reviews[0] && <h3>There isn't any reviews</h3>}\r\n      <ul>\r\n        {reviews.map(({ author, content, id }) =>\r\n          <li key={id}>\r\n            <h3>{author}</h3>\r\n            <p>{content}</p>\r\n          </li>\r\n        )}\r\n      </ul>\r\n  </div>\r\n)\r\n\r\n\r\nReviews.propTypes = {\r\n  reviews: PropTypes.array,\r\n}\r\n\r\nReviews.defaultProps = {\r\n  reviews: [],\r\n}\r\n\r\n\r\nexport default Reviews;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst key = '399eb4ff66260035740cfbb2ef9e0a30';\r\n\r\nconst fetchMovies = (url) => {\r\n  return axios\r\n    .get(`${url}api_key=${key}`)\r\n    .then(res => res.data)\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport default fetchMovies;","import React from 'react';\r\nimport css from './style.module.scss';\r\n\r\nconst MovieCard = ({ movieInfo }) => {\r\n  const { backdrop_path, title, vote_average, overview, genres } = movieInfo || '';\r\n\r\n  return (\r\n    <div className={css.movieCard}>\r\n      <img src={backdrop_path && 'https://image.tmdb.org/t/p/w500/' + backdrop_path} alt=\"MoviePoster\" />\r\n      <div className={css.movieCardInfo}>\r\n        <h2>{title}</h2>\r\n        <p>User score: {vote_average}</p>\r\n        <h3>Overview</h3>\r\n        <p>{overview}</p>\r\n        <h4>Genres</h4>\r\n        <p>{genres && genres.map(el => el.name).join(', ')}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieCard;","import React, { Component } from 'react';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport css from './style.module.scss';\r\nimport Loader2 from 'react-loader-spinner';\r\n\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\nimport MoviesApi from '../../MoviesApi';\r\nimport MovieCard from './MovieCard';\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  \r\n  state = {\r\n    spinner2: false,\r\n    movieInfo: {},\r\n    credits: [],\r\n    reviews: []\r\n  }\r\n\r\n  location_state = this.props.location.state;\r\n\r\n  componentDidMount() {\r\n    this.fetchMovieInfo(this.props.match.params.movie_id, 'movieInfo');\r\n  }\r\n\r\n  fetchMovieInfo = (url, infoType) => {\r\n    if (!this.state.spinner2) this.setState({ spinner2: true });\r\n\r\n    MoviesApi(`/movie/${url}?`)\r\n      .then((data) => data && this.setState({\r\n        [infoType]: infoType === 'reviews' ? data.results :\r\n          infoType === 'credits' ? data.cast : data\r\n      }))\r\n      .finally(() => {\r\n        this.setState({ spinner2: false });\r\n        if(infoType === 'credits' || infoType === 'reviews')\r\n        window.scrollTo({\r\n          top: 400,\r\n          behavior: \"smooth\"\r\n        });\r\n      })\r\n\r\n  }\r\n\r\n  fetchCast = () => {\r\n    this.fetchMovieInfo(`${this.state.movieInfo.id}/credits`, 'credits');\r\n  }\r\n\r\n  fetchReviews = () => {\r\n    this.fetchMovieInfo(`${this.state.movieInfo.id}/reviews`, 'reviews');\r\n  }\r\n\r\n  goBack = () => {\r\n    const { history } = this.props;\r\n    this.location_state ?\r\n    history.push({ ...this.location_state }) :\r\n    history.push({ pathname: '/' })\r\n  }\r\n\r\n  render() {\r\n    const { match: { url } } = this.props;\r\n    const { movieInfo, spinner2, credits, reviews } = this.state;\r\n\r\n    return (\r\n      <>\r\n        { movieInfo &&\r\n          <section className={css.movieDetailsPage}>\r\n            <button className={css.backButton} onClick={this.goBack}>Back</button>\r\n            <MovieCard movieInfo={movieInfo}/>\r\n            <div>\r\n              <p>Additional information</p>\r\n              <Link to={`${url}/cast`} onClick={this.fetchCast}>Cast</Link>\r\n              <br />\r\n              <Link to={`${url}/reviews`} onClick={this.fetchReviews}>Reviews</Link>\r\n            </div>\r\n            <Switch>\r\n              <Route path={`${url}/cast`} render={props => <Cast credits={credits}/>} />\r\n              <Route path={`${url}/reviews`} render={props => <Reviews reviews={reviews}/>}/>\r\n            </Switch>\r\n            {spinner2 && <Loader2 style={{zIndex: \"99\", display: \"block\"}}/>}  \r\n          </section>\r\n        }  \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './style.module.scss';\r\n\r\nconst SearchForm = ({ handleSubmit, onInputChange }) => (\r\n    <form className={css.searchForm} onSubmit={handleSubmit}>\r\n      <input className={css.searchFormInput} type=\"text\" placeholder=\"Search movies...\" onChange={onInputChange}/>\r\n      <button type='submit' className={css.button}>Search</button>\r\n    </form>\r\n  )\r\n\r\n\r\nSearchForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default SearchForm;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MovieDetailsPage from './MovieDetailsPage';\r\nimport SearchForm from '../SearchForm';\r\nimport MoviesList from '../MoviesList';\r\nimport PropTypes from 'prop-types';\r\nimport css from './style.module.scss';\r\nimport qs from 'qs';\r\n\r\nclass MoviesPage extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchMoviesByQuery(this.checkSearchString());\r\n    this.checkSearchString();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    this.props.fetchMoviesByQuery(this.checkSearchString(prevProps));\r\n  }\r\n\r\n  checkSearchString = (prevProps) => {\r\n    const { location: { search } } = this.props;\r\n    if(prevProps) if (prevProps.location.search === search) return '';\r\n\r\n    const parsedSearch = qs.parse(search.slice(1));\r\n    return parsedSearch ? parsedSearch.query : '';\r\n  }\r\n\r\n  render() {\r\n    const { moviesList, handleSubmit, match, onInputChange, location } = this.props,\r\n      { url } = match;\r\n\r\n    return (\r\n      <div className={css.moviesPage}>\r\n        <SearchForm handleSubmit={handleSubmit} onInputChange={onInputChange} />\r\n        <MoviesList moviesList={moviesList} url={url} location={location} />\r\n        <Route path={`${url}/:movie_id`} render={props => <MovieDetailsPage {...props} />} />\r\n      </div>\r\n    )\r\n  }\r\n }\r\n\r\nMoviesPage.propTypes = {\r\n  moviesList: PropTypes.array,\r\n  onSubmit: PropTypes.func,\r\n  movieInfo: PropTypes.object,\r\n  onLinkClick: PropTypes.func,\r\n}\r\n\r\nMoviesPage.defaultProps = {\r\n  moviesList: [],\r\n}\r\n\r\nexport default MoviesPage;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport css from './style.module.scss';\r\n\r\nconst Header = ({ currentPage }) => (\r\n  <section className={css.header}>\r\n    <NavLink exact to='/' className={css.link} activeClassName={css.linkActive}>Home</NavLink>\r\n    <NavLink to='/movies' className={css.link} activeClassName={css.linkActive} >Movies</NavLink>\r\n  </section>\r\n)\r\n\r\nexport default Header;","import React, { Component, Fragment } from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport qs from 'qs';\r\n\r\nimport HomePage from '../HomePage';\r\nimport MoviesPage from '../MoviesPage';\r\nimport Header from '../Header';\r\nimport MoviesApi from '../MoviesApi';\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    spinner: false,\r\n    popularMoviesList: [],\r\n    searchMoviesList: [],\r\n  }\r\n\r\n  fetchMovies = (url, list) => {\r\n    if (!this.state.spinner) this.setState({ spinner: true });\r\n    MoviesApi(url)\r\n      .then(({ results }) => this.setState({ [list]: results }))\r\n      .finally(() => this.setState({ spinner: false }));\r\n  }\r\n  \r\n  fetchPopularMovies = () => {\r\n    this.fetchMovies(`/trending/movie/week?`, 'popularMoviesList');\r\n  }\r\n \r\n  fetchMoviesByQuery = (query) => {\r\n    if (!query) return;\r\n    this.fetchMovies(`/search/movie?query=${query}&`, 'searchMoviesList');\r\n  }\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (!this.query) return;\r\n    const { location, history } = this.props;\r\n    history.push({\r\n      ...location,\r\n      search: qs.stringify({ query: this.query }),\r\n    });\r\n  }\r\n\r\n  onInputChange = ({ target: { value } }) => {\r\n    this.query = value;\r\n  }\r\n\r\n  render() {\r\n    const { spinner, popularMoviesList, searchMoviesList } = this.state,\r\n      { location: { pathname } } = this.props;\r\n    \r\n    return (\r\n      <Fragment>\r\n        <Header currentPage={pathname} changePage={this.changePage}/>\r\n          <Switch>\r\n            <Route path='/' exact render={props => <HomePage {...props}\r\n              moviesList={popularMoviesList}\r\n              fetchMovies={this.fetchPopularMovies}\r\n            />} />\r\n            <Route path='/movies' render={props => <MoviesPage {...props}\r\n              moviesList={searchMoviesList}\r\n              handleSubmit={this.handleSubmit}\r\n              onInputChange={this.onInputChange}\r\n              fetchMoviesByQuery={this.fetchMoviesByQuery}\r\n            />} />\r\n            <Redirect to='/' />\r\n          </Switch>  \r\n        {spinner && <Loader />}\r\n      </Fragment>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './style.css';\n\nReactDOM.render(\n  <Router basename='/'>\n    <Route component={App} />\n  </Router>\n  ,\n  document.getElementById('root'));"],"sourceRoot":""}