{"version":3,"sources":["components/MoviesPage/MovieDetailsPage/style.module.scss","components/SearchForm/style.module.scss","components/Header/style.module.scss","components/HomePage/index.jsx","components/MoviesPage/MovieDetailsPage/Cast/index.jsx","components/MoviesPage/MovieDetailsPage/Reviews/index.jsx","components/MoviesPage/MovieDetailsPage/index.jsx","components/SearchForm/index.jsx","components/MoviesPage/index.jsx","components/Header/index.jsx","components/App/index.jsx","index.js"],"names":["module","exports","Homepage","filmsList","map","title","id","key","to","defaultProps","Cast","credits","character","name","profile_path","src","alt","Reviews","reviews","author","content","MovieDetailsPage","movie","backdrop_path","vote_average","overview","genres","img_url","genresNames","reduce","acc","el","slice","className","css","movieCard","movieCardInfo","path","component","SearchForm","onSubmit","inputRef","searchForm","searchForm__input","ref","type","autoComplete","placeholder","MoviesPage","render","Header","header","link","App","state","spinner","createRef","api_key","api_url","fetchFilms","url","setState","axios","get","then","res","data","results","catch","err","console","log","finally","evt","preventDefault","current","value","this","exact","props","HomePage","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a51969a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"style_movieCard__13BM1\",\"movieCardInfo\":\"style_movieCardInfo__2W1BI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"style_searchForm__VeWpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__1pUZY\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Homepage = ({ filmsList }) => (\n  <section>\n    <ul>\n      {filmsList.map(({ title, id }) => <li key={id}><Link to={`/movies/${id}`}>{title}</Link></li>)}\n    </ul>\n  </section>\n)\n\nHomepage.propTypes = {\n  filmsList: PropTypes.array,\n}\n\nHomepage.defaultProps = {\n  filmsList: [],\n}\n\nexport default Homepage;\n","import React from 'react';\r\n\r\nconst Cast = ({ credits }) => (\r\n  <section>\r\n    <ul>\r\n      {credits.map(({ character, name, profile_path }) =>\r\n        <li>\r\n          <img src={'https://image.tmdb.org/t/p/w200' + profile_path} alt=\"\" />\r\n          <p>{name}</p>\r\n          <p>Character: {character}</p>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  </section>\r\n)\r\n\r\nexport default Cast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Reviews = ({ reviews }) => (\r\n  <section>\r\n    <ul>\r\n      {reviews.map(({ author, content, id }) =>\r\n        <li key={id}>\r\n          <h3>{author}</h3>\r\n          <p>{content}</p>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  </section>\r\n)\r\n\r\n\r\nReviews.propTypes = {\r\n  reviews: PropTypes.array,\r\n}\r\n\r\nReviews.defaultProps = {\r\n  reviews: [],\r\n}\r\n\r\n\r\nexport default Reviews;","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\nimport css from './style.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MovieDetailsPage = ({ movie }) => {\r\n  \r\n  const { backdrop_path, title, vote_average, overview, genres } = movie;\r\n  const img_url = backdrop_path ? 'https://image.tmdb.org/t/p/w500' + backdrop_path : '';\r\n\r\n  const genresNames = genres ? genres.reduce((acc, el) => acc + el.name + ', ', '').slice(-2) : '';\r\n\r\n  return (\r\n    <div>\r\n      <section className={css.movieCard}>\r\n        <img src={img_url} alt=\"MoviePoster\" />\r\n        <atricle className={css.movieCardInfo}>\r\n          <h2>{title}</h2>\r\n          <p>User score: {vote_average}</p>\r\n          <h3>Overview</h3>\r\n          <p>{overview}</p>\r\n          <h4>Genres</h4>\r\n          <p>{genresNames}</p>\r\n        </atricle>\r\n      </section>\r\n      <section>\r\n        <p>Additional information</p>\r\n        <Link to='/movies/cast'>Cast</Link>\r\n        <Link to='/movies/reviews'>Reviews</Link>\r\n      </section>\r\n      <Switch>\r\n        <Route path='/movies/cast' component={Cast} />\r\n        <Route path='/movies/reviews' component={Reviews} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nMovieDetailsPage.propTypes = {\r\n  movie: PropTypes.object,\r\n}\r\n\r\nMovieDetailsPage.defaultProps = {\r\n  movie: {},\r\n}\r\n\r\nexport default MovieDetailsPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './style.module.scss';\r\n\r\nconst SearchForm = ({ onSubmit, inputRef }) => (\r\n    <form className={css.searchForm} onSubmit={onSubmit}>\r\n      <input className={css.searchForm__input} ref={inputRef} type=\"text\" autoComplete=\"off\" placeholder=\"Search images...\"/>\r\n    </form>\r\n  )  \r\n\r\n\r\nSearchForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport MovieDetailsPage from './MovieDetailsPage';\r\nimport SearchForm from '../SearchForm';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MoviesPage = ({ filmsList, onSubmit, inputRef, movie }) => {\r\n  return (\r\n    <div>\r\n      <SearchForm onSubmit={onSubmit} inputRef={inputRef} />\r\n      <ul>\r\n        {filmsList.map(({ title, id }) => <li key={id}><Link to={`/movies/${id}`}>{title}</Link></li>)}\r\n      </ul>\r\n      <Route path={'/movies/:movie_id'} render={() => <MovieDetailsPage movie={movie}/>}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nMoviesPage.propTypes = {\r\n  movies: PropTypes.array,\r\n  onSubmit: PropTypes.func,\r\n}\r\n\r\nMoviesPage.defaultProps = {\r\n  onSubmit: [],\r\n}\r\n\r\nexport default MoviesPage;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport css from './style.module.scss';\r\n\r\nconst Header = () => (\r\n  <section className={css.header}>\r\n    <NavLink to='/' className={css.link}>Home</NavLink>\r\n    <NavLink to='/movies'>Movies</NavLink>\r\n  </section>\r\n)\r\n\r\nexport default Header;","import React, { Component, createRef } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nimport HomePage from '../HomePage';\r\nimport MoviesPage from '../MoviesPage';\r\nimport Header from '../Header';\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    spinner: true,\r\n    filmsList: [],\r\n  }\r\n\r\n  inputRef = createRef();\r\n\r\n  api_key = '399eb4ff66260035740cfbb2ef9e0a30';\r\n  api_url = 'https://api.themoviedb.org/3'\r\n\r\n  componentDidMount() {\r\n    this.fetchFilms(`${this.api_url}/trending/movie/week?api_key=${this.api_key}`);\r\n  }\r\n\r\n  fetchFilms = (url) => {\r\n    if (!this.state.spinner) this.setState({ spinner: true });\r\n    axios\r\n      .get(url)\r\n      .then(res => this.setState({ filmsList: res.data.results }))\r\n      .catch(err => console.log(err))\r\n      .finally(() => this.setState({ spinner: false }))\r\n  }\r\n\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.fetchFilms(`${this.api_url}/search/movie?api_key=${this.api_key}&query=${this.inputRef.current.value}`);\r\n  }\r\n  \r\n  render() {\r\n    const { spinner, filmsList } = this.state;\r\n    return (\r\n      <Router>\r\n        <Header />\r\n        {spinner && <Loader />}\r\n          <Switch>\r\n            <Route path='/' exact render={props => <HomePage {...props} filmsList={filmsList}/>} />\r\n            <Route path='/movies' render={props => <MoviesPage {...props} filmsList={filmsList} onSubmit={this.onSubmit} inputRef={this.inputRef}/>} />\r\n            <Redirect to='/' />\r\n          </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}